name: Check the quality of the docker image

on:
  workflow_call:
    inputs:
      sparse_checkout:
        required: false
        type: string
        default: |
          Dockerfile
          .hadolint.yaml
          docker-test.yaml
      need_registry_src:
        required: false
        type: boolean
      registry_src_fqdn:
        type: string
        default: ghcr.io
      registry_src_username:
        type: string
        default: ${{ github.repository_owner }}
      base_image_name:
        type: string
        default: ${{ github.repository }}
      image_name:
        type: string
        default: ${{ github.repository }}
      dockerfile_path:
        type: string
        default: "./Dockerfile"
      context:
        type: string
        default: "."
      image_build_args:
        type: string
      hadolint_config_file_path:
        type: string
      cst_config_file_path:
        required: true
        type: string
    secrets:
      registry_src_password:
        required: false

jobs:
  check_linter:
    name: Check linter for Dockerfile
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          sparse-checkout: ${{ inputs.sparse_checkout }}
          sparse-checkout-cone-mode: false
      - name: Check the quality with Hadolint
        uses: floozy/github/actions/docker/check-quality@main
        with:
          dockerfile_path: ${{ inputs.dockerfile_path }}
          hadolint_config_file_path: ${{ inputs.hadolint_config_file_path }}

  run_tests:
    name: Run tests to validate the docker image
    runs-on: ubuntu-latest
    needs: check_linter
    steps:
      - uses: actions/checkout@v4
        with:
          sparse-checkout: ${{ inputs.sparse-checkout }}
          sparse-checkout-cone-mode: false

      - name: Login to the docker registry
        if: inputs.need_registry_src
        uses: floozy/github/actions/docker/login@main
        with:
          registry_fqdn: ${{ inputs.registry_src_fqdn }}
          registry_username: ${{ inputs.registry_src_username }}
          registry_password: ${{ secrets.registry_src_password }}
          image_name: ${{ inputs.base_image_name }}
      - name: Build the image
        uses: floozy/github/actions/docker/build@main
        with:
          image_name: ${{ inputs.image_name }}
          dockerfile_path: ${{ inputs.dockerfile_path }}
          context: ${{ inputs.context }}
          image_build_args: ${{ inputs.image_build_args }}

      - name: Run the tests with Container Structure Test
        uses: floozy/github/actions/docker/test@main
        with:
          image_name: ${{ inputs.image_name }}
          cst_config_file_path: ${{ inputs.cst_config_file_path }}
